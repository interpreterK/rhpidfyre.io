@use 'sass:math';

@function real-viewbox($min-vw, $min-max: calc(1920px / 1.3)) {
	@return min($min-vw, $min-max);
}

//convert preset dark colors for the light mode
@function tolight($c1,$c2,$c3, $scope: 1.5) { //must take rgb values
    $c1_cl: math.clamp(0, math.round(calc($c1 * $scope)), 255);
    $c2_cl: math.clamp(0, math.round(calc($c2 * $scope)), 255);
    $c3_cl: math.clamp(0, math.round(calc($c3 * $scope)), 255);

    @return rgb($c1_cl,$c2_cl,$c3_cl)
}

//This will spam some unset's in the final css, idk how to make sass/scss ignore a property completely as of 5/28/23
//fixed above, ig.
@mixin layout($justify: unset, $align: unset, $direction: row, $gap: unset, $force-flexbox: false) {
	//instead of flex-direction be specified "grid" can be used as a replacement for-
	//-"flex-direction: column" since grid automatically is columns, and "flex" can be used to replace "flex-direction: row"-
	//-and since flex is automatically rows.
	//!yay less css junk on the final build now.
	@if $direction == row or $force-flexbox == true {
		display: flex;
		
		@if $gap != unset {
			column-gap: $gap;
		}
		@if $force-flexbox == true {
			flex-direction: $direction;
		}
	} @else {
		display: grid;

		@if $gap != unset {
			gap: $gap;
		}
		@if $justify == center {
			> * {
				margin-inline: auto;
			}
		}
	}

	@if $justify != unset {
		justify-content: $justify;
	}
	@if $align != unset {
		align-items: $align;
	}
}

:root {
	--Montserrat-font: "Montserrat", sans-serif;
	--Lato-font: "Lato", sans-serif;
	--Page-Secondary: #0a0a0a;
	--Page-even-Secondary: #050505;
	--Page-light-scheme: #e6e6e6;
	--Border-Color: #828282;
	--White-Hover: #e1e1e1; //I guess bright is too bright
}

::selection {
	background-color: #f0f0f0;
	color: black;

	@media (prefers-color-scheme: light) {
		background-color: #323232;
		color: #f0f0f0;
	}
}

html { //Also is :root
	color-scheme: light dark;
	scroll-behavior: smooth;

	@media (prefers-reduced-motion) {
		scroll-behavior: auto;	
	}
}

body {
	margin: 0;
	box-sizing: border-box;
	overflow: hidden;
	background-color: black;
	text-rendering: optimizeSpeed;

	&.load-trigger-finish {
		overflow: hidden;
	}
}

button {
	cursor: pointer;
	border: 0;
}

h1, h2, button {
	color: white;
	transition: color 1s;
}

a {
	color: white;
	
	&:hover, &:link, &:active, &:hover {
		color: white;
	}
}

@media (prefers-color-scheme: light) {
	body {
		background-color: var(--Page-light-scheme);
	}
	h1, h2, button {
		color: black
	}
	a {
		color: black;
		
		&:hover, &:link, &:active, &:hover {
			color: black;
		}
	}
}

//Loading screen
/*
	https://loading.io/css/
	But modified to my liking
*/
@keyframes loading-anim {
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(360deg);
	}
}

loading-screen > #loading-window {
	@include layout(center, center, column);

	background-color: black;
	width: 100vw;
	height: 100vh;
	z-index: 9e2;
	position: fixed;
  	transition: opacity .5s;

  	@media (prefers-color-scheme: light) {
  		background-color: #c8c8c8;
  	}

	#loading-anim {
		@include layout(center, center);

		width: 80px;
		height: 80px;
		
		&::after {
			content: '';
			display: block;
			width: 64px;
			height: 64px;
			border: 6px solid currentColor {
				radius: 50%;
				color: currentColor transparent currentColor transparent;
			};
			animation: loading-anim 1.5s linear infinite;
		};
		&::before {
			content: '';
			display: block;
			width: 28px;
			height: 28px;
			border: 6px solid #969696 {
				radius: 50%;
				color: #969696 transparent #969696 transparent;
			};
			position: absolute;
			animation: loading-anim 2s linear infinite reverse;
		}
	}
}